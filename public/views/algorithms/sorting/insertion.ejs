<!DOCTYPE html>
<!-- Dominic Wüst -->
<html>
  <head>
    <meta charset="utf-8">
    <title>Insertionsort</title>
    <link rel="shortcut icon" type="image/x-icon" href="/imgs/favicon.ico"/>
    <link rel="stylesheet" href=<%= "/styles/" + path + ".css" %>>
    <link href="https://fonts.googleapis.com/css?family=Press+Start+2P|Righteous" rel="stylesheet">
    <script src=<%= "/js/" + path + ".js" %> type="text/javascript"></script>
    <script src="/js/codeHighlighting.js" type="text/javascript"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.6/p5.js"></script>
    <script type="text/javascript">
      const codeHighlighting = <%- JSON.stringify(codeHighlighting) %>;
    </script>
  </head>
  <body onload="addHighlighting(); restartAnimation(); noLoop(); needsScrambling = false;" onresize="setup();">
    <%- include(partialsPath + 'header.ejs') %>
      <main>
        <div class="title">
          <h1>Insertionsort</h1>
        </div>
        <div class="pageShortcuts">
          <h2>Page Shortcuts</h2>
          <ul>
            <li><a href="#usage">Gebrauch</a></li>
            <li><a href="#specs">Spezifikationen</a></li>
            <li><a href="#functionality">Funktionsweise</a></li>
            <li><a href="#exampleCode">Beispielcode</a><ul>
              <li><a href="#python">Python</a></li>
              <li><a href="#java">Java</a></li>
            </ul></li>
            <li><a href="#animatedExample">Animiertes Beispiel</a></li>
          </ul>
        </div>
        <div class="text">
          <div id="usage">
            <h2>Gebrauch</h2>
            <p>Der Insertionsort wird gebraucht, um einen unsortierten Array zu sortieren.</p>
            <p>Der Algorithmus ist vegleichbar mit dem, den von den meisten gebraucht wird, um Karten in der Hand zu sortieren.</p>
          </div>
          <div id="specs">
            <h2>Spezifikationen</h2>
            <p>Der Insertionsort Algorithmus hat eine worst-case Performance von <span class="bigO">O(n<sup>2</sup>) Vergleiche, O(n<sup>2</sup>) Tauschungen</span> und eine best-case Performance von <span class="bigO">O(n) Vergleiche, O(1) Tauschungen</span>. Seine Durchschnittsperformance beträgt <span class="bigO">O(n<sup>2</sup>) Vergleiche, O(n<sup>2</sup>) Tauschungen</span>.</p>
            <p>Der Algorithmus braucht keine weiteren Arrays und hat somit jeweils eine Space-complexity von <span class="bigO">O(1)</span>.</p>
          </div>
          <div id="functionality">
            <h2>Funktionsweise</h2>
            <p>Der Algorithmus wird Insertionsort genannt, da jeweils ein Wert in den sortierten Subarray eingefügt (engl. insert) wird.</p>
            <p>Bei dem Insertionsort wird mit dem Wert an der Stelle des tiefsten Indexes begonnen. Das Grundprinzip basiert darauf, dass der Subarray von Index 0 bis, aber ohne, den fokussierten Wert automatisch sortiert ist und den fokussierten Wert schliesslich in die richtigen Stelle des sortierten Subarrays einfügt, indem er mit jedem Wert des sortierten Subarrays verglichen wird. Schlussendlich wird mit dem kleinstmöglichen Index, welcher nicht sortiert ist, fortgefahren.</p>
            <p>Der fokussierte Wert wird mit jedem in dem sortierten Subarray verglichen, indem überprüft wird, ob der Wert dessen Index kleiner ist als der, des fokussierten, grösser ist, als der fokussierte Wert. Falls dies der Fall ist, </p>
            <p>Der Array ist sortiert, sobald der Wert am letzten Index an der korrekten Stelle eingefügt wurde.</p>
          </div>
          <div id="exampleCode">
            <h2>Beispielcode</h2>
            <p class="codeDescription">Dies ist ein in Python geschriebener Beispielcode:</p>
            <code class="code python"># arr ist der Array, welcher zu sortieren ist. Die Funktion gibt den sortierten Array zurück
def insertionSort(arr):
  # Über alle Werte von Index 1 an werden iteriert, um an die richtige Stelle inserted zu werden
  for i in range(1, len(arr)):
    # Über alle Werte, dessen Index kleiner ist als der, des momentan fokussierten Wertes werden iteriert
    for j in range(i - 1, -1, -1):
      # Falls der Wert, welcher inserted wird grösser ist, als der, mit dem er verglichen wird
      if arr[j] > arr[j + 1]:
        # Switche die beiden Werte bei Index j und (j + 1) miteinander
        arr[j], arr[j + 1] = arr[j + 1], arr[j]
      # Fahre ansonsten fort mit dem Inserten des nächsten Wertes
      else:
        break
  # Der sortierte Array wird zurückgegeben
  return arr</code>
            <p class="codeDescription">Dies ist ein in Java geschriebener Beispielcode:</p>
            <p>Es können selbstverständlich auch andere Datentypen gebraucht werden. </p>
            <code class="code java">// arr ist der Array, welcher zu sortieren ist. Die Funktion gibt den sortierten Array zurück
public static int[] insertionSort(int[] arr) {
  // Über alle Werte von Index 1 an werden iteriert, um an die richtige Stelle inserted zu werden
  for (int i = 1; i < arr.length; i++) {
    // Über alle Werte, dessen Index kleiner ist als der, des momentan fokussierten Wertes werden iteriert
    for (int j = i - 1; j >= 0; j--) {
      // Falls der Wert, welcher inserted wird grösser ist, als der, mit dem er verglichen wird
      if (arr[j] > arr[j + 1]) {
        // Switche die beiden Werte bei index j und (j + 1) miteinander
        int temp = arr[j];
        arr[j] = arr[j + 1];
        arr[j + 1] = temp;
      }
      // Fahre ansonsten fort mit dem Inserten des nächsten Wertes
      else break;
    }
  }
  // Der sortierte Array wird zurückgegeben
  return arr;
}</code>
          </div>
          <div id="animatedExample">
            <h2>Animiertes Beispiel</h2>
            <div class="legend">
              <h3>Legende</h3>
              <ul>
                <li><span style="color: blue;">Fokussierter Wert</span></li>
                <li><span style="color: purple">Wert, mit dem der fokussierte Wert verglichen wird</span></li>
                <li><span style="color: green;">Momentan nicht beachteter Wert</span></li>
                <li><span style="color: gray;">Wert am korrekten Index</span></li>
              </ul>
            </div>
            <p>Drücke Start, um die Animation zu starten. Ändere die Position des Sliders, um die Geschwindigkeit der Animation zu verändern.</p>
            <div class="animationInput">
                <input type="button" name="restartAnimation" value="Start" onmouseup="restartAnimation(); needsScrambling = true;" ontouchend="restartAnimation(); needsScrambling = true;">
                <input type="range" name="fps" min="0" max="5" step="0.0001" oninput="fps = Math.pow(2, this.value);">
            </div>
            <div id="animation"></div>
        </div>
      </main>
    <%- include(partialsPath + 'footer1.ejs') %>
  </body>
</html>
