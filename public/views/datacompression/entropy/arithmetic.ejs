<!DOCTYPE html>
<!-- Daniel Isler -->
<html lang = "de">
  <head>
    <meta charset="utf-8"/>
    <title>Arithemtische Kodierung</title>
    <link rel="shortcut icon" type="image/x-icon" href="/imgs/favicon.ico"/>
    <link rel="stylesheet" href="/styles/course.css">
    <link rel="stylesheet" href=<%= "/styles/" + path + ".css" %>>
    <script src=<%= "/js/" + path + ".js" %>></script>
    <link href="https://fonts.googleapis.com/css?family=Righteous" rel="stylesheet">
  </head>
  <body onload = "displayExercise(4);">
    <%- include(partialsPath + 'header.ejs') %>
    <main>
      <div class="title">
        <h1>Arithmetische Kodierung</h1>
      </div>
      <div class="shortlink">
        <h2>Shortlinks</h2>
        <ul>
          <li><a href="#general">Allgemein</a></li>
          <li><a href="#encodeConcept">Konzept Kodierer</a></li>
          <li><a href="#decodeConcept">Konzept Dekodierer</a></li>
        </ul>
      </div>
      <div>
        <div id = "general">
          <h2>Allgemein</h2>
          <p>Die arithmetische Kodierung ist ein Verfahren der Entropiekodierung, das Kompressionsraten erziehlt, die sehr nahe am theoretischen Limit liegt. Die arithmetische Kodierung unterscheidet sich in einem wesentlichen Punkt von herkömmlichen Kodierungen, wie zum Beispiel im ASCII-Code oder der Huffman-Kodierung wo Zeichen mit Bitfolgen gespeichert werden. In der arithmetischen Kodierung hingegen wird die gesamte Quellinformation in Form einer rationalen Zahl dargestellt und nicht in einzelne Komponenten (Zeichen) aufgeteilt. Der Nachteil der arithmetischen Kodierung ist, dass sie generell rechenintensiver ist als die herkömmlichen Verfahren.<br>Die Quellinformation wird nach der arithmetischen Kodierung als Zahl 0.0 &le; q &lt; 1.0 abgespeichert, wobei so wenige Nachkommastellen wie möglich verwendet werden.</p>
        </div>
        <div id = "encodeConcept">
          <h2>Konzept Kodierer</h2>
          <h3>Intervalle</h3>
          <p>Meistens für die arithmetische Kodierung das Intervall &#123;q &isin; &#8477; &vert; 0 &le; x &lt; 1&#125; benutzt. Das Intervall wird in Subintervalle unterteilt, wobei jeweils ein Subintervall einem Zeichen zugeordnet ist und die Grösse des Subintervalles von der Auftrittswahrscheinlichkeit des Zeichens abhängt.<br>Die Subintervalle können dabei beliebig angeordnet werden, da dies für die Qualität des Algorithmus keine Rolle spielt. Deswegen wird auf dieser Seite eine alphabetische Reihenfolge gewählt.<br>Dies wird am Beispiel AABBACAA veranschaulicht. Die Auftrittswahrscheinlichkeiten betragen dabei.</p>
          <figure class = "equation">p<sub>A</sub> = <figure class = "fraction"><span class = "upper">5</span><span class = "lower">8</span></figure> = 0.625, p<sub>B</sub> = <figure class = "fraction"><span class = "upper">2</span><span class = "lower">8</span></figure> = 0.25, p<sub>C</sub> = <figure class = "fraction"><span class = "upper">1</span><span class = "lower">8</span></figure> = 0.125</figure>
          <p>Nun wird das Startintervall &lsqb;0,1&lsqb; in drei Subintervalle unterteilt, deren Grösse jeweils der Auftrittswahrscheinlichkeit des Zeichens entsprechen.</p>
          <figure class = "interval">
            <span class = "intervalA"><span class = "start">0.000000</span>A<span class = "end">0.625000</span></span>
            <span class = "intervalB"><span class = "start">0.625000</span>B<span class = "end">0.875000</span></span>
            <span class = "intervalC"><span class = "start">0.875000</span>C<span class = "end">1.000000</span></span>
          </figure>
          <p>Der erste Buchstabe der Zeichenkette AABBACAA, die hier kodiert wird ist ein A. Deswegen wird das Gesamtinvervall nun in das vorherige Subintervall des Zeichens A gesetzt (das Intervall &lsqb;0,0.625&lsqb;). Das Intervall wird wieder in die drei Subintervalle unterteilt, wobei deren Grösse gleich der Auftrittswahrscheinlichkeit multipliziert mit 0.625 (der Länge des Gesamtintervalls) ist.</p>
          <figure class = "interval">
            <span class = "intervalA"><span class = "start">0.000000</span>A<span class = "end">0.390625</span></span>
            <span class = "intervalB"><span class = "start">0.390625</span>B<span class = "end">0.546875</span></span>
            <span class = "intervalC"><span class = "start">0.546875</span>C<span class = "end">0.625000</span></span>
          </figure>
          <p>Das nächste Zeichen ist wieder ein A, womit das ganze wieder in das vorgerige Subintervall von A gesetzt. Das Gesamtintervall, das wieder in drei Subintervalle unterteilt wird ist also nun &lsqb;0,0.390625&lsqb;.</p>
          <figure class = "interval">
            <span class = "intervalA"><span class = "start">0.000000</span>A<span class = "end">0.244141</span></span>
            <span class = "intervalB"><span class = "start">0.244141</span>B<span class = "end">0.341797</span></span>
            <span class = "intervalC"><span class = "start">0.341797</span>C<span class = "end">0.390625</span></span>
          </figure>
          <p>Nun folgt ein B, womit das nächste Gesamtintervall dem vorherigen Gesamtintervall vom Zeichen B entspricht. Das neue Gesamtintervall ist also &lsqb;0.244141,0.341797&lsqb;.</p>
          <figure class = "interval">
            <span class = "intervalA"><span class = "start">0.244141</span>A<span class = "end">0.305176</span></span>
            <span class = "intervalB"><span class = "start">0.305176</span>B<span class = "end">0.329590</span></span>
            <span class = "intervalC"><span class = "start">0.329590</span>C<span class = "end">0.341797</span></span>
          </figure>
          <p>Es kommt wieder ein B, das aufzuteilende Gesamtintervall ist also &lsqb;0.305176,0.329590&lsqb;.</p>
          <figure class = "interval">
            <span class = "intervalA"><span class = "start">0.305176</span>A<span class = "end">0.320435</span></span>
            <span class = "intervalB"><span class = "start">0.320435</span>B<span class = "end">0.326538</span></span>
            <span class = "intervalC"><span class = "start">0.326538</span>C<span class = "end">0.329590</span></span>
          </figure>
          <p>In der Zeichenkette AABBACAA wurde jetzt bereits der Teil AABB umgesetzt. Der nächste Buchstabe ist also wieder ein A, womit das neue Gesamtintervall &lsqb;0.305176,0.320435&lsqb; ist.</p>
          <figure class = "interval">
            <span class = "intervalA"><span class = "start">0.305176</span>A<span class = "end">0.314713</span></span>
            <span class = "intervalB"><span class = "start">0.314713</span>B<span class = "end">0.318527</span></span>
            <span class = "intervalC"><span class = "start">0.318527</span>C<span class = "end">0.320435</span></span>
          </figure>
          <p>Weil als nächstes ein C vorkommt erhalten wir das wesentlich kleinere Gesamtintervall &lsqb;0.318527,0.320435&lsqb;.</p>
          <figure class = "interval">
            <span class = "intervalA"><span class = "start">0.318527</span>A<span class = "end">0.319719</span></span>
            <span class = "intervalB"><span class = "start">0.319719</span>B<span class = "end">0.320196</span></span>
            <span class = "intervalC"><span class = "start">0.320196</span>C<span class = "end">0.320435</span></span>
          </figure>
          <p>Das nächste Gesamtintervall ist das letzte Subintervall von A: &lsqb;0.318527,0.319719&lsqb;.</p>
          <figure class = "interval">
            <span class = "intervalA"><span class = "start">0.318527</span>A<span class = "end">0.319272</span></span>
            <span class = "intervalB"><span class = "start">0.319272</span>B<span class = "end">0.319570</span></span>
            <span class = "intervalC"><span class = "start">0.319570</span>C<span class = "end">0.319719</span></span>
          </figure>
          <p>Das letzte Zeichen ist wieder ein A, womit das letzte Gesamtintervall &lsqb;0.318527,0.318993&lsqb; wird.</p>
          <figure class = "interval">
            <span class = "intervalA"><span class = "start">0.318527</span>A<span class = "end">0.318993</span></span>
            <span class = "intervalB"><span class = "start">0.318993</span>B<span class = "end">0.319179</span></span>
            <span class = "intervalC"><span class = "start">0.319179</span>C<span class = "end">0.319272</span></span>
          </figure>
          <p>Gespeichert wird nun eine beliebige, möglichst kurze Zahl aus dem letzten Subintervall: [0.318527, 0.318993]. Diese Zahl ist jetzt der Code für die ganze Zeichenkette AABBACAA, es wurden also keine einzelnen Zeichen kodiert, sondern direkt die Gesamtinformation. Hier kann also beispielsweise die Zahl 0.3186 abgespeichert werden.</p>
          <h3>Aufgaben zur Kodierung</h3>
          <p>Kodiere die folgenden Strings mit der arithmetischen Kodierung. Gib jeweils den Anfang und das Ende des letzten Intervalls gerundet auf sechs Stellen nach dem Komma an.</p>
          <input type = "button" value = "Neue Aufgaben" onclick = "resetEncode();">
          <table id = "exercieseEncode">
            <tr>
              <th>String</th>
              <th>Code</th>
            </tr>
            <tr>
              <td id = "exerciseEncode0"><input id = "inputEncode0" type = "text" spellcheck = "false"></td>
              <td id = "exerciseEncode1"><input id = "inputEncode1" type = "text" spellcheck = "false" placeholder = "Gib hier deine Lösung ein" oninput = "checkEncode(this.value, 0);"><br><input type = "button" value = "Lösung anzeigen" onclick = "solutionEncode(0);"></td>
            </tr>
            <tr>
              <td id = "exerciseEncode2"><input id = "inputEncode2" type = "text" spellcheck = "false"></td>
              <td id = "exerciseEncode3"><input id = "inputEncode3" type = "text" spellcheck = "false" placeholder = "Gib hier deine Lösung ein" oninput = "checkEncode(this.value, 1);"><br><input type = "button" value = "Lösung anzeigen" onclick = "solutionEncode(1);"></td>
            </tr>
            <tr>
              <td id = "exerciseEncode4"><input id = "inputEncode4" type = "text" spellcheck = "false"></td>
              <td id = "exerciseEncode5"><input id = "inputEncode5" type = "text" spellcheck = "false" placeholder = "Gib hier deine Lösung ein" oninput = "checkEncode(this.value, 2);"><br><input type = "button" value = "Lösung anzeigen" onclick = "solutionEncode(2);"></td>
            </tr>
            <tr>
              <td id = "exerciseEncode6"><input id = "inputEncode6" type = "text" spellcheck = "false"></td>
              <td id = "exerciseEncode7"><input id = "inputEncode7" type = "text" spellcheck = "false" placeholder = "Gib hier deine Lösung ein" oninput = "checkEncode(this.value, 3);"><br><input type = "button" value = "Lösung anzeigen" onclick = "solutionEncode(3);"></td>
            </tr>
          </table>
        </div>
        <div id = "decodeConcept">
          <h2>Konzept Dekodierer</h2>
          <p>Der Dekodierer erhält als Inputs die Auftrittswahrscheinlichkeiten der einzelnen Zeichen, sowie eine Zahl aus dem letzten Subintervall (die, die vom Kodierer abgespeichert wurde). Gleich wie beim Kodierer legt der Dekodierer das Startintervall [0, 1[ fest und teilt es an die Zeichen mit den zugehörigen Zeichen in alphabetischer Ordnung auf. Danach wird getestet, in welchem Subintervall die Inputzahl liegt. Das diesem Subintervall zugeordnete Zeichen ist also das nächste Zeichen der Information. Danach wird das nächste Intervall initialiesiert und es geht so weiter, bis die Information vollständig dekodiert wurde.</p>
          <p>Hier werden wir das oben kodierte Beispiel wieder dekodieren, wir erhalten also folgende Inputs.</p>
          <figure class = "equation">p<sub>A</sub> = <figure class = "fraction"><span class = "upper">5</span><span class = "lower">8</span></figure> = 0.625, p<sub>B</sub> = <figure class = "fraction"><span class = "upper">2</span><span class = "lower">8</span></figure> = 0.25, p<sub>C</sub> = <figure class = "fraction"><span class = "upper">1</span><span class = "lower">8</span></figure> = 0.125, Schlussintervall = 0.3186</figure>
          <p>Wenn wir die Zeichen also wieder wie vorhin nach ihrer Auftrittswahrscheinlichkeit in alphapetischer Ordnung im Intervall [0, 1[ darstellen erhalten wir.</p>
          <figure class = "interval">
            <span class = "intervalA"><span class = "start">0.000000</span>A<span class = "end">0.625000</span></span>
            <span class = "intervalB"><span class = "start">0.625000</span>B<span class = "end">0.875000</span></span>
            <span class = "intervalC"><span class = "start">0.875000</span>C<span class = "end">1.000000</span></span>
          </figure>
          <p>Die Zahl, die wir als Input erhalten haben: 0.3186 liegt im Subintervall [0, 0.625[. Demnach ist das erste Zeichen ein A. Nun wird das Intervall im Subintervall von A wieder erstellt.</p>
          <figure class = "interval">
            <span class = "intervalA"><span class = "start">0.000000</span>A<span class = "end">0.390625</span></span>
            <span class = "intervalB"><span class = "start">0.390625</span>B<span class = "end">0.546875</span></span>
            <span class = "intervalC"><span class = "start">0.546875</span>C<span class = "end">0.625000</span></span>
          </figure>
          <p>Der Input liegt wieder im Subintervall des Zeichens A, womit auch das zweite Zeichen ein A ist. Das nächste Intervall ist nun.</p>
          <figure class = "interval">
            <span class = "intervalA"><span class = "start">0.000000</span>A<span class = "end">0.244141</span></span>
            <span class = "intervalB"><span class = "start">0.244141</span>B<span class = "end">0.341797</span></span>
            <span class = "intervalC"><span class = "start">0.341797</span>C<span class = "end">0.390625</span></span>
          </figure>
          <p>Jetzt liegt der Input 0.3186 im Subintervall [0.2441, 0.3417[. Damit ist das dritte Zeichen ein B und das nächste Intervall wird im Subintervall von B initialisiert.</p>
          <figure class = "interval">
            <span class = "intervalA"><span class = "start">0.244141</span>A<span class = "end">0.305176</span></span>
            <span class = "intervalB"><span class = "start">0.305176</span>B<span class = "end">0.329590</span></span>
            <span class = "intervalC"><span class = "start">0.329590</span>C<span class = "end">0.341797</span></span>
          </figure>
          <p>Das vierte Zeichen ist wieder ein B und das Intervall wird wieder neu initialisiert.</p>
          <figure class = "interval">
            <span class = "intervalA"><span class = "start">0.305176</span>A<span class = "end">0.320435</span></span>
            <span class = "intervalB"><span class = "start">0.320435</span>B<span class = "end">0.326538</span></span>
            <span class = "intervalC"><span class = "start">0.326538</span>C<span class = "end">0.329590</span></span>
          </figure>
          <p>Beim fünften Zeichen handelt es sich wieder um ein A. Das nächste Intervall wird also wieder im Subintervall von A initialisiert.</p>
          <figure class = "interval">
            <span class = "intervalA"><span class = "start">0.305176</span>A<span class = "end">0.314713</span></span>
            <span class = "intervalB"><span class = "start">0.314713</span>B<span class = "end">0.318527</span></span>
            <span class = "intervalC"><span class = "start">0.318527</span>C<span class = "end">0.320435</span></span>
          </figure>
          <p>Es folgt ein C und das Intervall wird wieder neu initialisiert.</p>
          <figure class = "interval">
            <span class = "intervalA"><span class = "start">0.318527</span>A<span class = "end">0.319719</span></span>
            <span class = "intervalB"><span class = "start">0.319719</span>B<span class = "end">0.320196</span></span>
            <span class = "intervalC"><span class = "start">0.320196</span>C<span class = "end">0.320435</span></span>
          </figure>
          <p>Als siebtes Zeichen folgt ein A und das Intervall wird wieder neu initialisiert.</p>
          <figure class = "interval">
            <span class = "intervalA"><span class = "start">0.318527</span>A<span class = "end">0.319272</span></span>
            <span class = "intervalB"><span class = "start">0.319272</span>B<span class = "end">0.319570</span></span>
            <span class = "intervalC"><span class = "start">0.319570</span>C<span class = "end">0.319719</span></span>
          </figure>
          <p>Das letzte Zeichen ist auch wieder ein A und damit erhalten wir insgesamt die Information AABBACAA.</p>
          <h3>Aufgaben zur Dekodierung</h3>
          <p>In diesen Aufgaben werden dir das erste Intervall, damit du daraus die Wahrscheinlichkeiten berechnen kannst und das letzte Subintervall, woraus du die Inputzahl herauslesen kannst gegeben. Finde damit den String heraus, der Kodiert wurde.</p>
          <input type = "button" value = "Neue Aufgaben" onclick = "resetDecode();">
          <table id = "exercieseDecode">
            <tr>
              <th>String</th>
              <th>Code</th>
            </tr>
            <tr>
              <td id = "exerciseDecode0"><input id = "inputDecode0" type = "text" spellcheck = "false" placeholder = "Gib hier deine Lösung ein" oninput = "checkDecode(this.value, 0);"><br><input type = "button" value = "Lösung anzeigen" onclick = "solutionDecode(0);"></td>
              <td id = "exerciseDecode1"><textarea id = "inputDecode1" type = "text" spellcheck = "false" rows = "15" cols = "42"></textarea></td>
            </tr>
            <tr>
              <td id = "exerciseDecode2"><input id = "inputDecode2" type = "text" spellcheck = "false" placeholder = "Gib hier deine Lösung ein" oninput = "checkDecode(this.value, 1);"><br><input type = "button" value = "Lösung anzeigen" onclick = "solutionDecode(1);"></td>
              <td id = "exerciseDecode3"><textarea id = "inputDecode3" type = "text" spellcheck = "false" rows = "15" cols = "42"></textarea></td>
            </tr>
            <tr>
              <td id = "exerciseDecode4"><input id = "inputDecode4" type = "text" spellcheck = "false" placeholder = "Gib hier deine Lösung ein" oninput = "checkDecode(this.value, 2);"><br><input type = "button" value = "Lösung anzeigen" onclick = "solutionDecode(2);"></td>
              <td id = "exerciseDecode5"><textarea id = "inputDecode5" type = "text" spellcheck = "false" rows = "15" cols = "42"></textarea></td>
            </tr>
            <tr>
              <td id = "exerciseDecode6"><input id = "inputDecode6" type = "text" spellcheck = "false" placeholder = "Gib hier deine Lösung ein" oninput = "checkDecode(this.value, 3);"><br><input type = "button" value = "Lösung anzeigen" onclick = "solutionDecode(3);"></td>
              <td id = "exerciseDecode7"><textarea id = "inputDecode7" type = "text" spellcheck = "false" rows = "15" cols = "42"></textarea></td>
            </tr>
          </table>
        </div>
      </div>
    </main>
    <%- include(partialsPath + 'footer1.ejs') %>
  </body>
</html>
